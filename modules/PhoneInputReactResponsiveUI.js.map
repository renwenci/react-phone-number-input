{"version":3,"sources":["../source/PhoneInputReactResponsiveUI.js"],"names":["PhoneInputReactResponsiveUI","storeInputRef","ref","input","getInputClassName","disabled","invalid","focus","props","countrySelectProperties","propTypes","inputClassName","string","saveOnIcons","bool","countrySelectAriaLabel","countrySelectCloseAriaLabel","countrySelectMaxItems","number"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;IAEqBA,2B;;;;;;;;;;;;;;8NA0BpBC,a,GAAgB,UAACC,GAAD;AAAA,UAAS,MAAKC,KAAL,GAAaD,GAAtB;AAAA,G,QAchBE,iB,GAAoB,iBACpB;AAAA,OADuBC,QACvB,SADuBA,QACvB;AAAA,OADiCC,OACjC,SADiCA,OACjC;;AACC,UAAO,0BAEN,aAFM,EAGN,qBAHM,EAIN,mBAJM,EAKN;AACC,kCAAgCA,OADjC;AAEC,mCAAgCD;AAFjC,IALM,CAAP;AAUA,G,QAGDE,K,GAAQ;AAAA,UAAM,MAAKJ,KAAL,CAAWI,KAAX,EAAN;AAAA,G;;;;;2BA1BR;AACC,UACC,iEACM,KAAKC,KADX;AAEC,SAAM,KAAKP,aAFZ;AAGC,uBAAoB,KAAKG,iBAH1B;AAIC,oEAJD;AAKC,6BAA0BK,uBAL3B,IADD;AAQA;;AAgBD;;;;;4BApDOC,S,GACP;AACC;AACA;AACA;AACAC,iBAAiB,oBAAUC,MAJ5B;;AAMC;AACA;AACA;AACAC,cAAc,oBAAUC,IATzB;;AAWC;AACAC,yBAAyB,oBAAUH,MAZpC;;AAcC;AACA;AACA;AACAI,8BAA8B,oBAAUJ,MAjBzC;;AAmBC;AACAK,wBAAwB,oBAAUC;AApBnC,C;kBAHoBlB,2B;;;AA0DrB,IAAMS,0BACN;AACCE,iBAA+B,gBADhC;AAECE,cAA+B,aAFhC;AAGCE,yBAA+B,WAHhC;AAICC,8BAA+B,gBAJhC;AAKCC,wBAA+B;AALhC,CADA","file":"PhoneInputReactResponsiveUI.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport PhoneInput from './PhoneInput'\nimport CountrySelect from './CountrySelectReactResponsiveUI'\n\nexport default class PhoneInputReactResponsiveUI extends Component\n{\n\tstatic propTypes =\n\t{\n\t\t// `<input/>` CSS class.\n\t\t// Both for the phone number `<input/>` and\n\t\t// the country select autocomplete `<input/>`.\n\t\tinputClassName : PropTypes.string,\n\n\t\t// If set to `false`, then country flags will be shown\n\t\t// for all countries when country `<select/>` is expanded.\n\t\t// By default shows flag only for currently selected country.\n\t\tsaveOnIcons : PropTypes.bool,\n\n\t\t// `aria-label` for the `<Select/>`'s toggle `<button/>`.\n\t\tcountrySelectAriaLabel : PropTypes.string,\n\n\t\t// `aria-label` for the `<Select/>`'s \"Close\" button\n\t\t// (which is an \"x\" visible in fullscreen mode).\n\t\t// (not yet implemented but is likely to be).\n\t\tcountrySelectCloseAriaLabel : PropTypes.string,\n\n\t\t// Defines the height (in items) of the expanded country `<select/>`.\n\t\tcountrySelectMaxItems : PropTypes.number\n\t}\n\n\tstoreInputRef = (ref) => this.input = ref\n\n\trender()\n\t{\n\t\treturn (\n\t\t\t<PhoneInput\n\t\t\t\t{ ...this.props }\n\t\t\t\tref={ this.storeInputRef }\n\t\t\t\tgetInputClassName={ this.getInputClassName }\n\t\t\t\tcountrySelectComponent={ CountrySelect }\n\t\t\t\tcountrySelectProperties={ countrySelectProperties }/>\n\t\t)\n\t}\n\n\tgetInputClassName = ({ disabled, invalid }) =>\n\t{\n\t\treturn classNames\n\t\t(\n\t\t\t'rrui__input',\n\t\t\t'rrui__input-element',\n\t\t\t'rrui__input-field',\n\t\t\t{\n\t\t\t\t'rrui__input-field--invalid'  : invalid,\n\t\t\t\t'rrui__input-field--disabled' : disabled\n\t\t\t}\n\t\t)\n\t}\n\n\t// Proxy `.focus()` method.\n\tfocus = () => this.input.focus()\n}\n\nconst countrySelectProperties =\n{\n\tinputClassName               : 'inputClassName',\n\tsaveOnIcons                  : 'saveOnIcons',\n\tcountrySelectAriaLabel       : 'ariaLabel',\n\tcountrySelectCloseAriaLabel  : 'closeAriaLabel',\n\tcountrySelectMaxItems        : 'maxItems'\n}"]}